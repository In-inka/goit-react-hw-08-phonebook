{"version":3,"file":"static/js/621.b573991c.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/Contacts/Selectors.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/helpers/colors.js","../node_modules/react-spinners/esm/BarLoader.js","pages/Contacts/Contacts.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n`;\n\nexport const PhoneBook = styled.div`\n  width: 400px;\n  padding: 15px;\n  margin: 50px auto;\n  background-color: #add8e6;\n\n  box-shadow: 1px 1px 14px 4px rgba(0, 0, 0, 0.12);\n  border-radius: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  width: 350px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 3px;\n`;\nexport const Input = styled.input`\n  padding: 5px;\n  padding-left: 15px;\n  margin-bottom: 10px;\n  box-shadow: 1px 1px 14px 4px rgba(0, 0, 0, 0.12);\n  border-radius: 15px;\n`;\nexport const Btn = styled.button`\n  padding: 5px;\n  box-shadow: 1px 1px 14px 4px rgba(0, 0, 0, 0.12);\n  background-color: #fff;\n  cursor: pointer;\n\n  text-transform: uppercase;\n\n  border-radius: 15px;\n  &:hover {\n    background-color: #7cb9e8;\n    box-shadow: 1px 1px 14px 4px rgba(0, 0, 0, 0.12);\n  }\n`;\n","export const getContacts = state => state.contacts.contacts.items;\n\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const getError = state => state.contacts.contacts.error;\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nimport { Form, Label, Input, Btn } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/Contacts/Selectors';\nimport { Notify } from 'notiflix';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contact = useSelector(getContacts);\n  const [names, setNames] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const onChangeInput = e => {\n    e.preventDefault();\n\n    switch (e.currentTarget.name) {\n      case 'name':\n        setNames(e.currentTarget.value);\n        break;\n      case 'phone':\n        setPhone(e.currentTarget.value);\n        break;\n      default:\n        console.log('Sorry...');\n    }\n  };\n\n  const onSubmitContact = evt => {\n    evt.preventDefault();\n\n    if (contact.some(({ name }) => name === names)) {\n      Notify.failure(`${names} is already in contacts.`);\n      return;\n    }\n    dispatch(\n      addContact({\n        id: shortid.generate(),\n        name: names,\n        number: phone,\n      })\n    );\n    setNames('');\n    setPhone('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={onSubmitContact}>\n        <Label>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={names}\n          onChange={onChangeInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <Label>Number </Label>\n        <Input\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChangeInput}\n        />\n        <Btn type=\"submit\">Add contact</Btn>\n      </Form>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  width: 350px;\n  padding: 5px;\n`;\nexport const Item = styled.li`\n  padding: 5px;\n  text-transform: uppercase;\n  margin-bottom: 5px;\n\n  box-shadow: 1px 1px 14px 4px rgba(0, 0, 0, 0.12);\n  border-radius: 15px;\n`;\nexport const Contacts = styled.span`\n  display: inline-block;\n  min-width: 250px;\n`;\nexport const Btn = styled.button`\n  padding: 3px;\n  background-color: #fff;\n  cursor: pointer;\n\n  text-transform: uppercase;\n\n  border-radius: 10px;\n  &:hover {\n    background-color: #7cb9e8;\n    box-shadow: 1px 1px 14px 4px rgba(0, 0, 0, 0.12);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, Item, Btn, Contacts } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts } from 'redux/Contacts/Selectors';\nimport { getFilter } from 'redux/Contacts/FilterSlice';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const contactItem = () =>\n    filter\n      ? contacts.filter(({ name }) => name.toLowerCase().includes(filter))\n      : contacts;\n\n  return (\n    <List>\n      {contactItem().map(({ id, name, number }) => (\n        <Item key={id}>\n          <Contacts>\n            {' '}\n            {`${name}:`}\n            <br />\n            {`${number}`}\n          </Contacts>\n          {\n            <Btn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              Delete\n            </Btn>\n          }\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  filter: PropTypes.string,\n  deleteContact: PropTypes.func,\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Name = styled.input`\n  padding: 5px;\n  padding-left: 10px;\n  width: 350px;\n\n  box-shadow: 1px 1px 14px 4px rgba(0, 0, 0, 0.12);\n  border-radius: 15px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Form, Label, Name } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setStatusFilter, getFilter } from 'redux/Contacts/FilterSlice';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const onChangeFilter = evt => {\n    dispatch(setStatusFilter(evt.target.value));\n  };\n  return (\n    <Form>\n      <Label>Find contacts by name </Label>\n      <Name\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </Form>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var BasicColors;\n(function (BasicColors) {\n    BasicColors[\"maroon\"] = \"#800000\";\n    BasicColors[\"red\"] = \"#FF0000\";\n    BasicColors[\"orange\"] = \"#FFA500\";\n    BasicColors[\"yellow\"] = \"#FFFF00\";\n    BasicColors[\"olive\"] = \"#808000\";\n    BasicColors[\"green\"] = \"#008000\";\n    BasicColors[\"purple\"] = \"#800080\";\n    BasicColors[\"fuchsia\"] = \"#FF00FF\";\n    BasicColors[\"lime\"] = \"#00FF00\";\n    BasicColors[\"teal\"] = \"#008080\";\n    BasicColors[\"aqua\"] = \"#00FFFF\";\n    BasicColors[\"blue\"] = \"#0000FF\";\n    BasicColors[\"navy\"] = \"#000080\";\n    BasicColors[\"black\"] = \"#000000\";\n    BasicColors[\"gray\"] = \"#808080\";\n    BasicColors[\"silver\"] = \"#C0C0C0\";\n    BasicColors[\"white\"] = \"#FFFFFF\";\n})(BasicColors || (BasicColors = {}));\nexport var calculateRgba = function (color, opacity) {\n    if (Object.keys(BasicColors).includes(color)) {\n        color = BasicColors[color];\n    }\n    if (color[0] === \"#\") {\n        color = color.slice(1);\n    }\n    if (color.length === 3) {\n        var res_1 = \"\";\n        color.split(\"\").forEach(function (c) {\n            res_1 += c;\n            res_1 += c;\n        });\n        color = res_1;\n    }\n    var rgbValues = (color.match(/.{2}/g) || []).map(function (hex) { return parseInt(hex, 16); }).join(\", \");\n    return \"rgba(\".concat(rgbValues, \", \").concat(opacity, \")\");\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nimport { calculateRgba } from \"./helpers/colors\";\nvar long = createAnimation(\"BarLoader\", \"0% {left: -35%;right: 100%} 60% {left: 100%;right: -90%} 100% {left: 100%;right: -90%}\", \"long\");\nvar short = createAnimation(\"BarLoader\", \"0% {left: -200%;right: 100%} 60% {left: 107%;right: -8%} 100% {left: 107%;right: -8%}\", \"short\");\nfunction BarLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.height, height = _f === void 0 ? 4 : _f, _g = _a.width, width = _g === void 0 ? 100 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"height\", \"width\"]);\n    var wrapper = __assign({ display: \"inherit\", position: \"relative\", width: cssValue(width), height: cssValue(height), overflow: \"hidden\", backgroundColor: calculateRgba(color, 0.2), backgroundClip: \"padding-box\" }, cssOverride);\n    var style = function (i) {\n        return {\n            position: \"absolute\",\n            height: cssValue(height),\n            overflow: \"hidden\",\n            backgroundColor: color,\n            backgroundClip: \"padding-box\",\n            display: \"block\",\n            borderRadius: 2,\n            willChange: \"left, right\",\n            animationFillMode: \"forwards\",\n            animation: \"\".concat(i === 1 ? long : short, \" \").concat(2.1 / speedMultiplier, \"s \").concat(i === 2 ? \"\".concat(1.15 / speedMultiplier, \"s\") : \"\", \" \").concat(i === 1 ? \"cubic-bezier(0.65, 0.815, 0.735, 0.395)\" : \"cubic-bezier(0.165, 0.84, 0.44, 1)\", \" infinite\"),\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) })));\n}\nexport default BarLoader;\n","import { PhoneBook, Title } from 'pages/Contacts/Contacts.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BarLoader } from 'react-spinners';\nimport { getError, getIsLoading } from 'redux/Contacts/Selectors';\nimport { fetchContacts } from 'redux/operations';\n\nconst Contacts = () => {\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <PhoneBook>\n      {isLoading && !error && (\n        <BarLoader\n          color=\"white\"\n          loading={isLoading}\n          height={10}\n          width={100}\n          aria-label=\"Loading Spinner\"\n          data-testid=\"loader\"\n        />\n      )}\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </PhoneBook>\n  );\n};\n\nexport default Contacts;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","PhoneBook","_templateObject2","Form","Label","Input","_templateObject3","Btn","_templateObject4","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","dispatch","useDispatch","contact","useSelector","_useState","useState","_useState2","_slicedToArray","names","setNames","_useState3","_useState4","phone","setPhone","onChangeInput","e","preventDefault","currentTarget","name","value","console","log","_jsx","_Fragment","children","_jsxs","onSubmit","evt","some","_ref","Notify","concat","addContact","id","shortid","number","type","onChange","pattern","title","required","List","Item","Contacts","filter","getFilter","toLowerCase","includes","map","_ref2","onClick","deleteContact","Name","setStatusFilter","target","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","size","unit","valueString","match","toString","parseFloat","parseInt","warn","parseLengthAndUnit","BasicColors","createAnimation","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","calculateRgba","color","opacity","Object","keys","slice","length","res_1","split","forEach","c","rgbValues","hex","join","__assign","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","long","short","_a","_b","loading","_c","_d","speedMultiplier","_e","cssOverride","_f","height","_g","width","additionalprops","wrapper","display","position","overflow","backgroundColor","backgroundClip","style","borderRadius","willChange","animationFillMode","animation","React","useEffect","fetchContacts","BarLoader","ContactForm","Filter","ContactList","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","msCrypto","getRandomValues","Uint8Array","bytes","_seed_","mask","LN2","step"],"sourceRoot":""}